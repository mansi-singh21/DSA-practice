void bfs(int i,int visited[],vector<int>adjlist[]) {
        visited[i]=1;
        for(auto it: adjlist[i]){
            if(!visited[it]){
                bfs(it,visited,adjlist);
            }
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        vector<int> adjlist[isConnected.size()];
        for(int i=0;i<isConnected.size();i++){
            for(int j=0;j<isConnected.size();j++){
                if(isConnected[i][j]==1 && i!=j){
                    adjlist[i].push_back(j);
                    adjlist[j].push_back(i);
                }
            }
        }
        int n = isConnected.size();
        int visited[n];
        fill(visited, visited + n, 0);
        int c=0;
        for(int i=0;i<n;i++){
            if(!visited[i]){
                bfs(i,visited,adjlist);
                c++;
            }
        }
        return c;
    }
